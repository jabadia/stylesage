name: Deployment
on:
  push:
    branches:
      - master
    paths:
      - "iotd/**"
      - "Pipfile*"
      - "terraform/**"
      - "Dockerfile"
      - ".github/workflows/deploy.yaml"
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_REGION: "eu-west-1"
  ECR_REGISTRY: ${{ secrets.AWS_ECR_URL }}
  ECR_REPOSITORY: "stylesage/iotd"
permissions:
      id-token: write
      contents: read
      pull-requests: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$GITHUB_SHA .
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$GITHUB_SHA

  base-pre:
    runs-on: ubuntu-latest
    needs: build
    env:
      TF_WORKSPACE: "pre"
      TF_PATH: "terraform/base"
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: terraform workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: ${{ env.TF_PATH }}
          workspace: ${{ env.TF_WORKSPACE }}

      - name: terraform apply
        uses: dflook/terraform-apply@v1
        with:
          path: ${{ env.TF_PATH }}
          workspace: ${{ env.TF_WORKSPACE }}
          auto_approve: true

  app-pre:
    runs-on: ubuntu-latest
    needs: base-pre
    env:
      TF_WORKSPACE: "pre"
      TF_PATH: "terraform/app"
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: terraform workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: ${{ env.TF_PATH }}
          workspace: ${{ env.TF_WORKSPACE }}

      - name: terraform apply
        uses: dflook/terraform-apply@v1
        with:
          path: ${{ env.TF_PATH }}
          workspace: ${{ env.TF_WORKSPACE }}
          auto_approve: true
          variables: |
            image="${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$GITHUB_SHA"

  base-pro:
    runs-on: ubuntu-latest
    needs: app-pre
    env:
      TF_WORKSPACE: "pro"
      TF_PATH: "terraform/base"
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: terraform workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: ${{ env.TF_PATH }}
          workspace: ${{ env.TF_WORKSPACE }}

      - name: terraform apply
        uses: dflook/terraform-apply@v1
        with:
          path: ${{ env.TF_PATH }}
          workspace: ${{ env.TF_WORKSPACE }}
          auto_approve: true

  app-pro:
    runs-on: ubuntu-latest
    needs: base-pro
    env:
      TF_WORKSPACE: "pro"
      TF_PATH: "terraform/app"
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: terraform workspace
        uses: dflook/terraform-new-workspace@v1
        with:
          path: ${{ env.TF_PATH }}
          workspace: ${{ env.TF_WORKSPACE }}

      - name: terraform apply
        uses: dflook/terraform-apply@v1
        with:
          path: ${{ env.TF_PATH }}
          workspace: ${{ env.TF_WORKSPACE }}
          auto_approve: true
          variables: |
            image="${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$GITHUB_SHA"
